---
import { Image } from "astro:assets";
import { ClientRouter } from "astro:transitions";
import type { languageList } from "../../i18n/ui";
import { useTranslations } from "../../i18n/utils";
import { getRelativeLocaleUrl } from "astro:i18n";

//Styles
import "./styles.scss";

//Assets
//Icons
import iconLinkedin from "../../assets/icons/linkedin.svg";
import iconGithub from "../../assets/icons/github.svg";
import iconInstagram from "../../assets/icons/instagram.svg";

//Images
import profilePicture from "../../assets/images/profilep.jpeg";

const ICONS = [
  {
    name: iconLinkedin,
    url: "https://www.linkedin.com/in/fernando-gomez980912",
  },
  {
    name: iconGithub,
    url: "https://github.com/fgomezeng",
  },
  {
    name: iconInstagram,
    url: "https://www.instagram.com/ff__gomez/#"
  }
];

const currentLanguage = Astro.currentLocale || "es";
const translateLabels = useTranslations(currentLanguage as keyof typeof languageList);

const ROUTES = [
  {
    title: translateLabels('aside.home'),
    path: "/",
  },
  {
    title: translateLabels('aside.projects'),
    path: "/projects",
  },
  {
    title: "CV",
    path: "/cv",
  },
  {
    title: translateLabels('aside.contact'),
    path: "mailto:fernando.gomez@utp.edu.co",
  },
];

//Valida la ruta para saber cuál está activa 
const currentPath = new URL(Astro.request.url).pathname;
const cleanPath = (path: string) => {
  return path.replace(new RegExp(`^/${currentLanguage}`), '') || '/';
};

const isActive = (path: string) => {
  const cleanCurrentPath = cleanPath(currentPath);
  const cleanComparePath = cleanPath(path);

  if(cleanComparePath === "/"){
    return cleanCurrentPath === "/";
  }
  return cleanCurrentPath === cleanComparePath || cleanCurrentPath.startsWith(cleanComparePath + "/");
};
---

<aside class="aside" id="sidebar">
  <section class="profile-picture">
    <Image src={profilePicture} alt="profile" width="136" height="136" />
  </section>
  <section class="nav-menu">
    <ul class="list">
      {
        ROUTES.map(({ path, title }) => (
          <li>
            <a href={getRelativeLocaleUrl(currentLanguage, path)} class={isActive(path) ? 'active' : ''}>{title}</a>
          </li>
          <ClientRouter/>
        ))
      }
    </ul>
  </section>
  <section class="social">
    {
      ICONS.map(({ name, url }) => (
        <a href={url} target="_blank">
          <Image src={name} alt="icon" width={20} />
        </a>
      ))
    }
  </section>
</aside>
<div class="aside-backdrop" id="aside-backdrop"></div>
<script src="./utils/toggle-menu-remove.util.ts"></script>
